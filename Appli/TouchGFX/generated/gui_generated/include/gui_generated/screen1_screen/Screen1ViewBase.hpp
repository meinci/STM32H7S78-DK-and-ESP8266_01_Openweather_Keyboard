/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN1VIEWBASE_HPP
#define SCREEN1VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/mixins/ClickListener.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void flexbuttonShow_SSIDs()
    {
        // Override and implement this function in Screen1
    }
    virtual void hide_SSIDList()
    {
        // Override and implement this function in Screen1
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScalableImage scalableImage1;
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::TextAreaWithOneWildcard tA_Outdoor_Temp_1;
    touchgfx::TextAreaWithOneWildcard tA_Outdoor_Pres;
    touchgfx::TextAreaWithOneWildcard tA_Outdoor_Humi;
    touchgfx::TextAreaWithOneWildcard tA_Outdoor_Temp;
    touchgfx::TextAreaWithOneWildcard tA_Outdoor_City;
    touchgfx::TextAreaWithOneWildcard tA_Description;
    touchgfx::Image image2;
    touchgfx::TextAreaWithOneWildcard tA_Year;
    touchgfx::TextAreaWithOneWildcard tA_Month;
    touchgfx::TextAreaWithOneWildcard tA_Day;
    touchgfx::TextAreaWithOneWildcard tA_Hour;
    touchgfx::TextAreaWithOneWildcard tA_Minute;
    touchgfx::ClickListener< touchgfx::TextAreaWithOneWildcard > tA_SSID;
    touchgfx::TextAreaWithOneWildcard tA_SSIDList;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  flexButton1;
    touchgfx::IconButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButtonConnect;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  flexButton_City;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  flexButton_SSIDList;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TA_OUTDOOR_TEMP_1_SIZE = 18;
    touchgfx::Unicode::UnicodeChar tA_Outdoor_Temp_1Buffer[TA_OUTDOOR_TEMP_1_SIZE];
    static const uint16_t TA_OUTDOOR_PRES_SIZE = 20;
    touchgfx::Unicode::UnicodeChar tA_Outdoor_PresBuffer[TA_OUTDOOR_PRES_SIZE];
    static const uint16_t TA_OUTDOOR_HUMI_SIZE = 20;
    touchgfx::Unicode::UnicodeChar tA_Outdoor_HumiBuffer[TA_OUTDOOR_HUMI_SIZE];
    static const uint16_t TA_OUTDOOR_TEMP_SIZE = 18;
    touchgfx::Unicode::UnicodeChar tA_Outdoor_TempBuffer[TA_OUTDOOR_TEMP_SIZE];
    static const uint16_t TA_OUTDOOR_CITY_SIZE = 30;
    touchgfx::Unicode::UnicodeChar tA_Outdoor_CityBuffer[TA_OUTDOOR_CITY_SIZE];
    static const uint16_t TA_DESCRIPTION_SIZE = 50;
    touchgfx::Unicode::UnicodeChar tA_DescriptionBuffer[TA_DESCRIPTION_SIZE];
    static const uint16_t TA_YEAR_SIZE = 10;
    touchgfx::Unicode::UnicodeChar tA_YearBuffer[TA_YEAR_SIZE];
    static const uint16_t TA_MONTH_SIZE = 8;
    touchgfx::Unicode::UnicodeChar tA_MonthBuffer[TA_MONTH_SIZE];
    static const uint16_t TA_DAY_SIZE = 6;
    touchgfx::Unicode::UnicodeChar tA_DayBuffer[TA_DAY_SIZE];
    static const uint16_t TA_HOUR_SIZE = 6;
    touchgfx::Unicode::UnicodeChar tA_HourBuffer[TA_HOUR_SIZE];
    static const uint16_t TA_MINUTE_SIZE = 6;
    touchgfx::Unicode::UnicodeChar tA_MinuteBuffer[TA_MINUTE_SIZE];
    static const uint16_t TA_SSID_SIZE = 32;
    touchgfx::Unicode::UnicodeChar tA_SSIDBuffer[TA_SSID_SIZE];
    static const uint16_t TA_SSIDLIST_SIZE = 512;
    touchgfx::Unicode::UnicodeChar tA_SSIDListBuffer[TA_SSIDLIST_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen1ViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // SCREEN1VIEWBASE_HPP
