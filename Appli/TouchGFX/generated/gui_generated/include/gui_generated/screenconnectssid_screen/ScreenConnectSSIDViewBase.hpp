/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREENCONNECTSSIDVIEWBASE_HPP
#define SCREENCONNECTSSIDVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screenconnectssid_screen/ScreenConnectSSIDPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class ScreenConnectSSIDViewBase : public touchgfx::View<ScreenConnectSSIDPresenter>
{
public:
    ScreenConnectSSIDViewBase();
    virtual ~ScreenConnectSSIDViewBase();
    virtual void setupScreen();
    virtual void transitionBegins();

    /*
     * Custom Actions
     */
    virtual void keyboarSelectedVar(uint8_t value);

    /*
     * Virtual Action Handlers
     */
    virtual void keyboardSelected(uint8_t value)
    {
        // Override and implement this function in ScreenConnectSSID
    }
    virtual void updateScreen()
    {
        // Override and implement this function in ScreenConnectSSID
    }
    virtual void connect_SSID()
    {
        // Override and implement this function in ScreenConnectSSID
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box1;
    touchgfx::Box box2;
    touchgfx::TextArea textArea1;
    touchgfx::ButtonWithLabel buttonOK;
    touchgfx::BoxWithBorder boxWithBorder1_1;
    touchgfx::TextAreaWithOneWildcard textAreaPasword;
    touchgfx::ButtonWithLabel buttonCancel;
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::TextAreaWithOneWildcard textAreaSSID;
    touchgfx::TextArea textArea2;
    touchgfx::TextArea textArea3;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  flexButtonSSID;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  flexButtonPassword;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREAPASWORD_SIZE = 25;
    touchgfx::Unicode::UnicodeChar textAreaPaswordBuffer[TEXTAREAPASWORD_SIZE];
    static const uint16_t TEXTAREASSID_SIZE = 25;
    touchgfx::Unicode::UnicodeChar textAreaSSIDBuffer[TEXTAREASSID_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<ScreenConnectSSIDViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<ScreenConnectSSIDViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // SCREENCONNECTSSIDVIEWBASE_HPP
