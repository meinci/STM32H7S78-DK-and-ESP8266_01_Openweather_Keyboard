/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screenconnectssid_screen/ScreenConnectSSIDViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

ScreenConnectSSIDViewBase::ScreenConnectSSIDViewBase() :
    buttonCallback(this, &ScreenConnectSSIDViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &ScreenConnectSSIDViewBase::flexButtonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box1.setPosition(0, 0, 800, 480);
    box1.setColor(touchgfx::Color::getColorFromRGB(30, 64, 120));
    add(box1);

    box2.setPosition(184, 44, 504, 62);
    box2.setColor(touchgfx::Color::getColorFromRGB(242, 194, 51));
    add(box2);

    textArea1.setXY(379, 51);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(20, 79, 227));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CA5K));
    add(textArea1);

    buttonOK.setXY(688, 352);
    buttonOK.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_SMALL_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_SMALL_FILL_PRESSED_ID));
    buttonOK.setLabelText(touchgfx::TypedText(T___SINGLEUSE_4BBU));
    buttonOK.setLabelColor(touchgfx::Color::getColorFromRGB(0, 102, 153));
    buttonOK.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 102, 153));
    buttonOK.setAction(buttonCallback);
    add(buttonOK);

    boxWithBorder1_1.setPosition(279, 240, 330, 54);
    boxWithBorder1_1.setColor(touchgfx::Color::getColorFromRGB(186, 245, 159));
    boxWithBorder1_1.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorder1_1.setBorderSize(5);
    add(boxWithBorder1_1);

    textAreaPasword.setPosition(287, 249, 315, 36);
    textAreaPasword.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaPasword.setLinespacing(0);
    Unicode::snprintf(textAreaPaswordBuffer, TEXTAREAPASWORD_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_PV0L).getText());
    textAreaPasword.setWildcard(textAreaPaswordBuffer);
    textAreaPasword.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XUSJ));
    add(textAreaPasword);

    buttonCancel.setXY(15, 352);
    buttonCancel.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_SMALL_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_SMALL_FILL_PRESSED_ID));
    buttonCancel.setLabelText(touchgfx::TypedText(T___SINGLEUSE_054A));
    buttonCancel.setLabelColor(touchgfx::Color::getColorFromRGB(0, 102, 153));
    buttonCancel.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 102, 153));
    buttonCancel.setAction(buttonCallback);
    add(buttonCancel);

    boxWithBorder1.setPosition(279, 157, 330, 54);
    boxWithBorder1.setColor(touchgfx::Color::getColorFromRGB(186, 245, 159));
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorder1.setBorderSize(5);
    add(boxWithBorder1);

    textAreaSSID.setPosition(287, 166, 315, 36);
    textAreaSSID.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaSSID.setLinespacing(0);
    Unicode::snprintf(textAreaSSIDBuffer, TEXTAREASSID_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_B84I).getText());
    textAreaSSID.setWildcard(textAreaSSIDBuffer);
    textAreaSSID.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LCFX));
    add(textAreaSSID);

    textArea2.setXY(196, 171);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RLC5));
    add(textArea2);

    textArea3.setXY(138, 254);
    textArea3.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea3.setLinespacing(0);
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RDAB));
    add(textArea3);

    flexButtonSSID.setBoxWithBorderPosition(0, 0, 413, 54);
    flexButtonSSID.setBorderSize(5);
    flexButtonSSID.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButtonSSID.setAlpha(0);
    flexButtonSSID.setAction(flexButtonCallback);
    flexButtonSSID.setPosition(196, 157, 413, 54);
    add(flexButtonSSID);

    flexButtonPassword.setBoxWithBorderPosition(0, 0, 471, 54);
    flexButtonPassword.setBorderSize(5);
    flexButtonPassword.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButtonPassword.setAlpha(0);
    flexButtonPassword.setAction(flexButtonCallback);
    flexButtonPassword.setPosition(138, 240, 471, 54);
    add(flexButtonPassword);
}

ScreenConnectSSIDViewBase::~ScreenConnectSSIDViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void ScreenConnectSSIDViewBase::setupScreen()
{
    transitionBegins();
}

void ScreenConnectSSIDViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonCancel)
    {
        //ButtonCancel
        //When buttonCancel clicked change screen to Screen1
        //Go to Screen1 with no screen transition
        application().gotoScreen1ScreenNoTransition();
    }
    if (&src == &buttonOK)
    {
        //Button_OK
        //When buttonOK clicked call virtual function
        //Call connect_SSID
        connect_SSID();
    
        //backToMainScreen
        //When Button_OK completed change screen to Screen1
        //Go to Screen1 with no screen transition
        application().gotoScreen1ScreenNoTransition();
    }
}

void ScreenConnectSSIDViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButtonSSID)
    {
        //ButtonSSID
        //When flexButtonSSID clicked call keyboarSelectedVar on ScreenConnectSSID
        //Call keyboarSelectedVar
        keyboarSelectedVar(0);
    }
    if (&src == &flexButtonPassword)
    {
        //ButtonPassword
        //When flexButtonPassword clicked call keyboarSelectedVar on ScreenConnectSSID
        //Call keyboarSelectedVar
        keyboarSelectedVar(1);
    }
}

void ScreenConnectSSIDViewBase::keyboarSelectedVar(uint8_t value)
{
    //KeyboardSelected
    //When keyboarSelectedVar is called call virtual function
    //Call keyboardSelected
    keyboardSelected(value);

    //changeToScreenKeyboard
    //When KeyboardSelected completed change screen to ScreenKeyboard
    //Go to ScreenKeyboard with no screen transition
    application().gotoScreenKeyboardScreenNoTransition();
}

void ScreenConnectSSIDViewBase::transitionBegins()
{
    //updateScreen
    //When screen transition begins call virtual function
    //Call updateScreen
    updateScreen();
}
